// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/register.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace GrpcAuthService {
  /// <summary>
  /// The service definition.
  /// </summary>
  public static partial class Register
  {
    static readonly string __ServiceName = "Register";

    static readonly grpc::Marshaller<global::GrpcAuthService.UserRequest> __Marshaller_UserRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcAuthService.UserRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcAuthService.UserReply> __Marshaller_UserReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcAuthService.UserReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcAuthService.UserIdRequest> __Marshaller_UserIdRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcAuthService.UserIdRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Google.Protobuf.WellKnownTypes.Empty> __Marshaller_google_protobuf_Empty = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Google.Protobuf.WellKnownTypes.Empty.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::GrpcAuthService.AllUsersReply> __Marshaller_AllUsersReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::GrpcAuthService.AllUsersReply.Parser.ParseFrom);

    static readonly grpc::Method<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply> __Method_RegisterUser = new grpc::Method<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterUser",
        __Marshaller_UserRequest,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply> __Method_UpdateUser = new grpc::Method<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUser",
        __Marshaller_UserRequest,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::GrpcAuthService.UserIdRequest, global::GrpcAuthService.UserReply> __Method_DeleteUser = new grpc::Method<global::GrpcAuthService.UserIdRequest, global::GrpcAuthService.UserReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_UserIdRequest,
        __Marshaller_UserReply);

    static readonly grpc::Method<global::GrpcAuthService.UserIdRequest, global::Google.Protobuf.WellKnownTypes.Empty> __Method_GetUserById = new grpc::Method<global::GrpcAuthService.UserIdRequest, global::Google.Protobuf.WellKnownTypes.Empty>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserById",
        __Marshaller_UserIdRequest,
        __Marshaller_google_protobuf_Empty);

    static readonly grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcAuthService.AllUsersReply> __Method_GetAllUsers = new grpc::Method<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcAuthService.AllUsersReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllUsers",
        __Marshaller_google_protobuf_Empty,
        __Marshaller_AllUsersReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::GrpcAuthService.RegisterReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Register</summary>
    [grpc::BindServiceMethod(typeof(Register), "BindService")]
    public abstract partial class RegisterBase
    {
      public virtual global::System.Threading.Tasks.Task<global::GrpcAuthService.UserReply> RegisterUser(global::GrpcAuthService.UserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcAuthService.UserReply> UpdateUser(global::GrpcAuthService.UserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcAuthService.UserReply> DeleteUser(global::GrpcAuthService.UserIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::Google.Protobuf.WellKnownTypes.Empty> GetUserById(global::GrpcAuthService.UserIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::GrpcAuthService.AllUsersReply> GetAllUsers(global::Google.Protobuf.WellKnownTypes.Empty request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RegisterBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RegisterUser, serviceImpl.RegisterUser)
          .AddMethod(__Method_UpdateUser, serviceImpl.UpdateUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_GetUserById, serviceImpl.GetUserById)
          .AddMethod(__Method_GetAllUsers, serviceImpl.GetAllUsers).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RegisterBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RegisterUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply>(serviceImpl.RegisterUser));
      serviceBinder.AddMethod(__Method_UpdateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcAuthService.UserRequest, global::GrpcAuthService.UserReply>(serviceImpl.UpdateUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcAuthService.UserIdRequest, global::GrpcAuthService.UserReply>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_GetUserById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::GrpcAuthService.UserIdRequest, global::Google.Protobuf.WellKnownTypes.Empty>(serviceImpl.GetUserById));
      serviceBinder.AddMethod(__Method_GetAllUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Google.Protobuf.WellKnownTypes.Empty, global::GrpcAuthService.AllUsersReply>(serviceImpl.GetAllUsers));
    }

  }
}
#endregion
